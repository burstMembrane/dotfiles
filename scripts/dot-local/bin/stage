#!/bin/bash

# Git Interactive Staging with fzf
# Allows you to stage, unstage, discard, stash changes, or quit interactively.

# Customizable keybindings
KEY_STAGE="s"      # Stage file(s) (git add)
KEY_UNSTAGE="u"    # Unstage file(s) (git restore --staged)
KEY_EDIT="e"       # Edit file(s) (git add --edit)
KEY_DISCARD="d"    # Discard changes (git restore)
KEY_STASH="x"      # Stash file(s) (git stash push --)
KEY_QUIT="q"       # Quit fzf interface
KEY_COMMIT="c"     # Commit changes

# Move to the root of the Git repository
cd "$(git rev-parse --show-toplevel)" || exit 1

# Check for changes
if [ -z "$(git status --porcelain)" ]; then
  git status
  exit 0
fi

delta_cmd='delta --no-gitconfig \
           --wrap-max-lines 1 \
           --file-style omit \
           --hunk-header-style "dim" \
           --hunk-header-decoration-style "omit" \
           --syntax-theme none  \
           --paging never | bat --style=plain --wrap=auto'

# Define the preview command
preview_cmd='
  file=$(echo {} | cut -c4-)
  if git ls-files --error-unmatch "$file" &>/dev/null; then
    combined_diff=$(git diff --cached -- "$file"; git diff -- "$file")
    echo "$combined_diff" | '"${delta_cmd}"'
  else
    '"${delta_cmd}"' /dev/null "$file"
  fi
'

is_git_file="git ls-files --error-unmatch {} &>/dev/null"

# Sort files by filename while preserving `git status` output
git status --porcelain | fzf  --reverse \
  --wrap \
  --disabled \
  --ansi \
  --preview "$preview_cmd" \
  --preview-window=right:70% \
  --header "[$KEY_STAGE] stage | [$KEY_UNSTAGE] unstage | [$KEY_DISCARD] discard | [$KEY_STASH] stash | [$KEY_QUIT] quit" \
  --bind "$KEY_STAGE:execute(file=\$(echo {} | cut -c4-); git add \"\$file\")+reload(git status --porcelain)" \
  --bind "$KEY_UNSTAGE:execute(file=\$(echo {} | cut -c4-); git restore --staged \"\$file\")+reload(git status --porcelain)" \
  --bind "$KEY_EDIT:execute(file=\$(echo {} | cut -c4-); git add --edit \"\$file\")+reload(git status --porcelain)" \
  --bind "change:reload(git status --porcelain)" \
  --bind "$KEY_DISCARD:execute(file=\$(echo {} | cut -c4-); git restore \"\$file\")+reload(git status --porcelain)" \
  --bind "$KEY_STASH:execute(file=\$(echo {} | cut -c4-); git stash push -- \"\$file\")+reload(git status --porcelain)" \
  --bind "$KEY_COMMIT:become(git commit)" \
  --bind "$KEY_QUIT:abort" \
  --bind "enter:become(git status)"